#!/usr/bin/env bash

region="{{ region }}"
nextcloud_passwordsalt=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_ssm_path }}/nextcloud_passwordsalt --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
nextcloud_secret=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_ssm_path }}/nextcloud_secret --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
nextcloud_dbuser=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_ssm_path }}/nextcloud_dbuser --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
nextcloud_dbpassword=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_ssm_path }}/nextcloud_dbpassword --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
nextcloud_s01ldap_agent_password=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_ssm_path }}/nextcloud_s01ldap_agent_password --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
nextcloud_instance_id=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_ssm_path }}/nextcloud-id --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
temp_data_dir="/var/tmp/nextcloud/data"
NEXTCLOUD_DB_PASS=$(aws ssm get-parameters --with-decryption --names {{ nextcloud_rds_db_param }} --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
NEXTCLOUD_ADMIN_PASSWORD=$(aws ssm get-parameters --with-decryption --names "{{ nextcloud_user_param }}" --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')
LDAP_HOST={{ ldap_host }}
LDAP_PORT={{ ldap_port}}
LDAP_USER={{ ldap_user }}
LDAP_USER_PASS=$(aws ssm get-parameters --with-decryption --names {{ ldap_bind_param }} --region "$region" --query "Parameters[0]"."Value" | sed 's:^.\(.*\).$:\1:')

mkdir -p $temp_data_dir
chown -R {{ web_user }}:{{ web_user }} $temp_data_dir
#Check if params exist, and create
if [[ $nextcloud_passwordsalt = "ul" ]] && [[ $nextcloud_secret = "ul" ]] && [[ $nextcloud_dbuser = "ul" ]] && [[ $nextcloud_dbpassword = "ul" ]] && [[ $nextcloud_s01ldap_agent_password = "ul" ]] && [[ $nextcloud_instance_id = "ul" ]]; then
   echo "SSM Params missing -- creating from base install"
   cd {{ nextcloud_dir }}
   sudo -u {{ web_user }} php occ maintenance:install --database "mysql" \
       --database-host "{{ db_dns_name }}"  \
       --database-name "{{ app_name }}"  --database-user "{{ nextcloud_rds_db_user }}" --database-pass "$NEXTCLOUD_DB_PASS" \
           --admin-user "{{ nextcloud_admin }}" --admin-pass "$NEXTCLOUD_ADMIN_PASSWORD"   --data-dir "$temp_data_dir"

   #Configure ldap authentication
   sudo -u {{ web_user }} php occ app:enable user_ldap         #Enable Ldap App
   sudo -u {{ web_user }} php occ ldap:delete-config s01
   sudo -u {{ web_user }} php occ ldap:create-empty-config
   sudo -u {{ web_user }} php occ ldap:set-config s01 ldapHost "$LDAP_HOST"
   sudo -u {{ web_user }} php occ ldap:set-config s01 ldapPort "$LDAP_PORT"
   sudo -u {{ web_user }} php occ ldap:set-config s01 ldapAgentName "$LDAP_USER"
   sudo -u {{ web_user }} php occ ldap:set-config s01 ldapAgentPassword "$LDAP_USER_PASS"
   sudo -u {{ web_user }} php occ app:enable twofactor_totp    #Enable 2f app

   #Get secrets from config and push to ssm and exit
   nextcloud_passwordsalt=$(sudo -u {{ web_user }} php occ config:list --private | grep  passwordsalt | cut -f4 -d'"')
   nextcloud_secret=$(sudo -u {{ web_user }} php occ config:list --private | grep  secret | cut -f4 -d'"')
   nextcloud_dbuser=$(sudo -u {{ web_user }} php occ config:list --private | grep  dbuser | cut -f4 -d'"')
   nextcloud_dbpassword=$(sudo -u {{ web_user }} php occ config:list --private | grep  dbpassword | cut -f4 -d'"')
   nextcloud_s01ldap_agent_password=$(sudo -u {{ web_user }} php occ config:list --private | grep s01ldap_agent_password | cut -f4 -d'"')
   nextcloud_instance_id=$(sudo -u {{ web_user }} php occ config:list --private | grep  instanceid | cut -f4 -d'"')

   #Push secrets to SSM
   aws ssm put-parameter --name "{{ nextcloud_ssm_path }}/nextcloud_passwordsalt"  --value "$nextcloud_passwordsalt"  --type SecureString  --key-id {{ key_id }} --region "$region"
   aws ssm put-parameter --name "{{ nextcloud_ssm_path }}/nextcloud_secret"  --value "$nextcloud_secret"  --type SecureString  --key-id {{ key_id }} --region "$region"
   aws ssm put-parameter --name "{{ nextcloud_ssm_path }}/nextcloud_dbuser"  --value "$nextcloud_dbuser"  --type SecureString  --key-id {{ key_id }} --region "$region"
   aws ssm put-parameter --name "{{ nextcloud_ssm_path }}/nextcloud_dbpassword"  --value "$nextcloud_dbpassword"  --type SecureString  --key-id {{ key_id }} --region "$region"
   aws ssm put-parameter --name "{{ nextcloud_ssm_path }}/nextcloud_s01ldap_agent_password"  --value "$nextcloud_s01ldap_agent_password"  --type SecureString  --key-id {{ key_id }} --region "$region"
   aws ssm put-parameter --name "{{ nextcloud_ssm_path }}/nextcloud-id"  --value "$nextcloud_instance_id"  --type SecureString  --key-id {{ key_id }} --region "$region"
else
   echo "SSM Params present - commencing base install lite"
   chown {{ web_user }}:{{ web_user }} $temp_data_dir
   cd {{ nextcloud_dir }}
   sudo -u {{ web_user }} php occ maintenance:install --database "sqlite" --admin-user "{{ installer_user }}" --admin-pass "{{ installer_user }}" --data-dir "$temp_data_dir"
   sudo -u {{ web_user }} php occ app:enable user_ldap         #Enable Ldap App
   sudo -u {{ web_user }} php occ app:enable twofactor_totp    #Enable 2f app
fi
